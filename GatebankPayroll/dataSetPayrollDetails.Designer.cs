//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

using System.IO;

namespace GatebankPayroll {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dataSetPayrollDetails")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dataSetPayrollDetails : global::System.Data.DataSet {
        
        private spReportGeneratedPayrollPerUserDataTable tablespReportGeneratedPayrollPerUser;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public dataSetPayrollDetails() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected dataSetPayrollDetails(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["spReportGeneratedPayrollPerUser"] != null)) {
                    base.Tables.Add(new spReportGeneratedPayrollPerUserDataTable(ds.Tables["spReportGeneratedPayrollPerUser"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public spReportGeneratedPayrollPerUserDataTable spReportGeneratedPayrollPerUser {
            get {
                return this.tablespReportGeneratedPayrollPerUser;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            dataSetPayrollDetails cln = ((dataSetPayrollDetails)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["spReportGeneratedPayrollPerUser"] != null)) {
                    base.Tables.Add(new spReportGeneratedPayrollPerUserDataTable(ds.Tables["spReportGeneratedPayrollPerUser"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablespReportGeneratedPayrollPerUser = ((spReportGeneratedPayrollPerUserDataTable)(base.Tables["spReportGeneratedPayrollPerUser"]));
            if ((initTable == true)) {
                if ((this.tablespReportGeneratedPayrollPerUser != null)) {
                    this.tablespReportGeneratedPayrollPerUser.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "dataSetPayrollDetails";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dataSetPayrollDetails.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablespReportGeneratedPayrollPerUser = new spReportGeneratedPayrollPerUserDataTable();
            base.Tables.Add(this.tablespReportGeneratedPayrollPerUser);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializespReportGeneratedPayrollPerUser() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dataSetPayrollDetails ds = new dataSetPayrollDetails();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void spReportGeneratedPayrollPerUserRowChangeEventHandler(object sender, spReportGeneratedPayrollPerUserRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class spReportGeneratedPayrollPerUserDataTable : global::System.Data.TypedTableBase<spReportGeneratedPayrollPerUserRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnEmployeeID;
            
            private global::System.Data.DataColumn columnAdditionalID;
            
            private global::System.Data.DataColumn columnDeductionID;
            
            private global::System.Data.DataColumn columnDateFrom;
            
            private global::System.Data.DataColumn columnDateTo;
            
            private global::System.Data.DataColumn columnTotalAdditional;
            
            private global::System.Data.DataColumn columnTotalDeduction;
            
            private global::System.Data.DataColumn columnTotalTakeHomePay;
            
            private global::System.Data.DataColumn columnID1;
            
            private global::System.Data.DataColumn columnOT;
            
            private global::System.Data.DataColumn columnAllowance;
            
            private global::System.Data.DataColumn columnIncentives;
            
            private global::System.Data.DataColumn columnBonus;
            
            private global::System.Data.DataColumn columnOther1;
            
            private global::System.Data.DataColumn columnOther1V;
            
            private global::System.Data.DataColumn columnOther2;
            
            private global::System.Data.DataColumn columnOther2V;
            
            private global::System.Data.DataColumn columnOther3;
            
            private global::System.Data.DataColumn columnOther3V;
            
            private global::System.Data.DataColumn columnID2;
            
            private global::System.Data.DataColumn columnSSS;
            
            private global::System.Data.DataColumn columnPagIbig;
            
            private global::System.Data.DataColumn columnPhilHealth;
            
            private global::System.Data.DataColumn columnTax;
            
            private global::System.Data.DataColumn columnSSSLoan;
            
            private global::System.Data.DataColumn columnPagIbigLoan;
            
            private global::System.Data.DataColumn columnProviLoan;
            
            private global::System.Data.DataColumn columnAbsents;
            
            private global::System.Data.DataColumn columnLates;
            
            private global::System.Data.DataColumn columnSMCard;
            
            private global::System.Data.DataColumn columnArHealthCard;
            
            private global::System.Data.DataColumn columnOther;
            
            private global::System.Data.DataColumn columnProvidentFund;
            
            private global::System.Data.DataColumn columnID3;
            
            private global::System.Data.DataColumn columnEmployeeName;
            
            private global::System.Data.DataColumn columnPosition;
            
            private global::System.Data.DataColumn columnBranch;
            
            private global::System.Data.DataColumn columnBasicSalary;
            
            private global::System.Data.DataColumn columnDateHired;
            
            private global::System.Data.DataColumn columnEmployeeStatus;
            
            private global::System.Data.DataColumn columnID4;
            
            private global::System.Data.DataColumn columnlogin_id;
            
            private global::System.Data.DataColumn columnlogin_password;
            
            private global::System.Data.DataColumn columnaccess_level;
            
            private global::System.Data.DataColumn columnfull_name;
            
            private global::System.Data.DataColumn columnuser_status;
            
            private global::System.Data.DataColumn columnEmployeeID1;
            
            private global::System.Data.DataColumn columnID5;
            
            private global::System.Data.DataColumn columnPayrollDetailsID;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnID6;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnEP_Status;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spReportGeneratedPayrollPerUserDataTable() {
                this.TableName = "spReportGeneratedPayrollPerUser";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal spReportGeneratedPayrollPerUserDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected spReportGeneratedPayrollPerUserDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmployeeIDColumn {
                get {
                    return this.columnEmployeeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AdditionalIDColumn {
                get {
                    return this.columnAdditionalID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeductionIDColumn {
                get {
                    return this.columnDeductionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalAdditionalColumn {
                get {
                    return this.columnTotalAdditional;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalDeductionColumn {
                get {
                    return this.columnTotalDeduction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalTakeHomePayColumn {
                get {
                    return this.columnTotalTakeHomePay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID1Column {
                get {
                    return this.columnID1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OTColumn {
                get {
                    return this.columnOT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AllowanceColumn {
                get {
                    return this.columnAllowance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IncentivesColumn {
                get {
                    return this.columnIncentives;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BonusColumn {
                get {
                    return this.columnBonus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Other1Column {
                get {
                    return this.columnOther1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Other1VColumn {
                get {
                    return this.columnOther1V;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Other2Column {
                get {
                    return this.columnOther2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Other2VColumn {
                get {
                    return this.columnOther2V;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Other3Column {
                get {
                    return this.columnOther3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Other3VColumn {
                get {
                    return this.columnOther3V;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID2Column {
                get {
                    return this.columnID2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SSSColumn {
                get {
                    return this.columnSSS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PagIbigColumn {
                get {
                    return this.columnPagIbig;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhilHealthColumn {
                get {
                    return this.columnPhilHealth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TaxColumn {
                get {
                    return this.columnTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SSSLoanColumn {
                get {
                    return this.columnSSSLoan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PagIbigLoanColumn {
                get {
                    return this.columnPagIbigLoan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProviLoanColumn {
                get {
                    return this.columnProviLoan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AbsentsColumn {
                get {
                    return this.columnAbsents;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LatesColumn {
                get {
                    return this.columnLates;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SMCardColumn {
                get {
                    return this.columnSMCard;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ArHealthCardColumn {
                get {
                    return this.columnArHealthCard;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherColumn {
                get {
                    return this.columnOther;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProvidentFundColumn {
                get {
                    return this.columnProvidentFund;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID3Column {
                get {
                    return this.columnID3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmployeeNameColumn {
                get {
                    return this.columnEmployeeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PositionColumn {
                get {
                    return this.columnPosition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BranchColumn {
                get {
                    return this.columnBranch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BasicSalaryColumn {
                get {
                    return this.columnBasicSalary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateHiredColumn {
                get {
                    return this.columnDateHired;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmployeeStatusColumn {
                get {
                    return this.columnEmployeeStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID4Column {
                get {
                    return this.columnID4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn login_idColumn {
                get {
                    return this.columnlogin_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn login_passwordColumn {
                get {
                    return this.columnlogin_password;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn access_levelColumn {
                get {
                    return this.columnaccess_level;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn full_nameColumn {
                get {
                    return this.columnfull_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn user_statusColumn {
                get {
                    return this.columnuser_status;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmployeeID1Column {
                get {
                    return this.columnEmployeeID1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID5Column {
                get {
                    return this.columnID5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PayrollDetailsIDColumn {
                get {
                    return this.columnPayrollDetailsID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID6Column {
                get {
                    return this.columnID6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EP_StatusColumn {
                get {
                    return this.columnEP_Status;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spReportGeneratedPayrollPerUserRow this[int index] {
                get {
                    return ((spReportGeneratedPayrollPerUserRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spReportGeneratedPayrollPerUserRowChangeEventHandler spReportGeneratedPayrollPerUserRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spReportGeneratedPayrollPerUserRowChangeEventHandler spReportGeneratedPayrollPerUserRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spReportGeneratedPayrollPerUserRowChangeEventHandler spReportGeneratedPayrollPerUserRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spReportGeneratedPayrollPerUserRowChangeEventHandler spReportGeneratedPayrollPerUserRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddspReportGeneratedPayrollPerUserRow(spReportGeneratedPayrollPerUserRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spReportGeneratedPayrollPerUserRow AddspReportGeneratedPayrollPerUserRow(
                        int EmployeeID, 
                        int AdditionalID, 
                        int DeductionID, 
                        System.DateTime DateFrom, 
                        System.DateTime DateTo, 
                        double TotalAdditional, 
                        double TotalDeduction, 
                        double TotalTakeHomePay, 
                        double OT, 
                        double Allowance, 
                        double Incentives, 
                        double Bonus, 
                        string Other1, 
                        double Other1V, 
                        string Other2, 
                        double Other2V, 
                        string Other3, 
                        double Other3V, 
                        double SSS, 
                        double PagIbig, 
                        double PhilHealth, 
                        double Tax, 
                        double SSSLoan, 
                        double PagIbigLoan, 
                        double ProviLoan, 
                        double Absents, 
                        double Lates, 
                        double SMCard, 
                        double ArHealthCard, 
                        double Other, 
                        double ProvidentFund, 
                        string EmployeeName, 
                        int Position, 
                        int Branch, 
                        double BasicSalary, 
                        System.DateTime DateHired, 
                        int EmployeeStatus, 
                        decimal login_id, 
                        string login_password, 
                        int access_level, 
                        string full_name, 
                        int user_status, 
                        int EmployeeID1, 
                        int PayrollDetailsID, 
                        string Remarks, 
                        string Name, 
                        int EP_Status) {
                spReportGeneratedPayrollPerUserRow rowspReportGeneratedPayrollPerUserRow = ((spReportGeneratedPayrollPerUserRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        EmployeeID,
                        AdditionalID,
                        DeductionID,
                        DateFrom,
                        DateTo,
                        TotalAdditional,
                        TotalDeduction,
                        TotalTakeHomePay,
                        null,
                        OT,
                        Allowance,
                        Incentives,
                        Bonus,
                        Other1,
                        Other1V,
                        Other2,
                        Other2V,
                        Other3,
                        Other3V,
                        null,
                        SSS,
                        PagIbig,
                        PhilHealth,
                        Tax,
                        SSSLoan,
                        PagIbigLoan,
                        ProviLoan,
                        Absents,
                        Lates,
                        SMCard,
                        ArHealthCard,
                        Other,
                        ProvidentFund,
                        null,
                        EmployeeName,
                        Position,
                        Branch,
                        BasicSalary,
                        DateHired,
                        EmployeeStatus,
                        null,
                        login_id,
                        login_password,
                        access_level,
                        full_name,
                        user_status,
                        EmployeeID1,
                        null,
                        PayrollDetailsID,
                        Remarks,
                        null,
                        Name,
                        EP_Status};
                rowspReportGeneratedPayrollPerUserRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowspReportGeneratedPayrollPerUserRow);
                return rowspReportGeneratedPayrollPerUserRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spReportGeneratedPayrollPerUserRow FindByIDID1ID2ID3ID4(int ID, int ID1, int ID2, int ID3, int ID4) {
                return ((spReportGeneratedPayrollPerUserRow)(this.Rows.Find(new object[] {
                            ID,
                            ID1,
                            ID2,
                            ID3,
                            ID4})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                spReportGeneratedPayrollPerUserDataTable cln = ((spReportGeneratedPayrollPerUserDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new spReportGeneratedPayrollPerUserDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnEmployeeID = base.Columns["EmployeeID"];
                this.columnAdditionalID = base.Columns["AdditionalID"];
                this.columnDeductionID = base.Columns["DeductionID"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
                this.columnTotalAdditional = base.Columns["TotalAdditional"];
                this.columnTotalDeduction = base.Columns["TotalDeduction"];
                this.columnTotalTakeHomePay = base.Columns["TotalTakeHomePay"];
                this.columnID1 = base.Columns["ID1"];
                this.columnOT = base.Columns["OT"];
                this.columnAllowance = base.Columns["Allowance"];
                this.columnIncentives = base.Columns["Incentives"];
                this.columnBonus = base.Columns["Bonus"];
                this.columnOther1 = base.Columns["Other1"];
                this.columnOther1V = base.Columns["Other1V"];
                this.columnOther2 = base.Columns["Other2"];
                this.columnOther2V = base.Columns["Other2V"];
                this.columnOther3 = base.Columns["Other3"];
                this.columnOther3V = base.Columns["Other3V"];
                this.columnID2 = base.Columns["ID2"];
                this.columnSSS = base.Columns["SSS"];
                this.columnPagIbig = base.Columns["PagIbig"];
                this.columnPhilHealth = base.Columns["PhilHealth"];
                this.columnTax = base.Columns["Tax"];
                this.columnSSSLoan = base.Columns["SSSLoan"];
                this.columnPagIbigLoan = base.Columns["PagIbigLoan"];
                this.columnProviLoan = base.Columns["ProviLoan"];
                this.columnAbsents = base.Columns["Absents"];
                this.columnLates = base.Columns["Lates"];
                this.columnSMCard = base.Columns["SMCard"];
                this.columnArHealthCard = base.Columns["ArHealthCard"];
                this.columnOther = base.Columns["Other"];
                this.columnProvidentFund = base.Columns["ProvidentFund"];
                this.columnID3 = base.Columns["ID3"];
                this.columnEmployeeName = base.Columns["EmployeeName"];
                this.columnPosition = base.Columns["Position"];
                this.columnBranch = base.Columns["Branch"];
                this.columnBasicSalary = base.Columns["BasicSalary"];
                this.columnDateHired = base.Columns["DateHired"];
                this.columnEmployeeStatus = base.Columns["EmployeeStatus"];
                this.columnID4 = base.Columns["ID4"];
                this.columnlogin_id = base.Columns["login_id"];
                this.columnlogin_password = base.Columns["login_password"];
                this.columnaccess_level = base.Columns["access_level"];
                this.columnfull_name = base.Columns["full_name"];
                this.columnuser_status = base.Columns["user_status"];
                this.columnEmployeeID1 = base.Columns["EmployeeID1"];
                this.columnID5 = base.Columns["ID5"];
                this.columnPayrollDetailsID = base.Columns["PayrollDetailsID"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnID6 = base.Columns["ID6"];
                this.columnName = base.Columns["Name"];
                this.columnEP_Status = base.Columns["EP_Status"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnEmployeeID = new global::System.Data.DataColumn("EmployeeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeID);
                this.columnAdditionalID = new global::System.Data.DataColumn("AdditionalID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdditionalID);
                this.columnDeductionID = new global::System.Data.DataColumn("DeductionID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeductionID);
                this.columnDateFrom = new global::System.Data.DataColumn("DateFrom", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new global::System.Data.DataColumn("DateTo", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
                this.columnTotalAdditional = new global::System.Data.DataColumn("TotalAdditional", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalAdditional);
                this.columnTotalDeduction = new global::System.Data.DataColumn("TotalDeduction", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalDeduction);
                this.columnTotalTakeHomePay = new global::System.Data.DataColumn("TotalTakeHomePay", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalTakeHomePay);
                this.columnID1 = new global::System.Data.DataColumn("ID1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID1);
                this.columnOT = new global::System.Data.DataColumn("OT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOT);
                this.columnAllowance = new global::System.Data.DataColumn("Allowance", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAllowance);
                this.columnIncentives = new global::System.Data.DataColumn("Incentives", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIncentives);
                this.columnBonus = new global::System.Data.DataColumn("Bonus", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBonus);
                this.columnOther1 = new global::System.Data.DataColumn("Other1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOther1);
                this.columnOther1V = new global::System.Data.DataColumn("Other1V", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOther1V);
                this.columnOther2 = new global::System.Data.DataColumn("Other2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOther2);
                this.columnOther2V = new global::System.Data.DataColumn("Other2V", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOther2V);
                this.columnOther3 = new global::System.Data.DataColumn("Other3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOther3);
                this.columnOther3V = new global::System.Data.DataColumn("Other3V", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOther3V);
                this.columnID2 = new global::System.Data.DataColumn("ID2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID2);
                this.columnSSS = new global::System.Data.DataColumn("SSS", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSSS);
                this.columnPagIbig = new global::System.Data.DataColumn("PagIbig", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPagIbig);
                this.columnPhilHealth = new global::System.Data.DataColumn("PhilHealth", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhilHealth);
                this.columnTax = new global::System.Data.DataColumn("Tax", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTax);
                this.columnSSSLoan = new global::System.Data.DataColumn("SSSLoan", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSSSLoan);
                this.columnPagIbigLoan = new global::System.Data.DataColumn("PagIbigLoan", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPagIbigLoan);
                this.columnProviLoan = new global::System.Data.DataColumn("ProviLoan", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProviLoan);
                this.columnAbsents = new global::System.Data.DataColumn("Absents", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbsents);
                this.columnLates = new global::System.Data.DataColumn("Lates", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLates);
                this.columnSMCard = new global::System.Data.DataColumn("SMCard", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSMCard);
                this.columnArHealthCard = new global::System.Data.DataColumn("ArHealthCard", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArHealthCard);
                this.columnOther = new global::System.Data.DataColumn("Other", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOther);
                this.columnProvidentFund = new global::System.Data.DataColumn("ProvidentFund", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProvidentFund);
                this.columnID3 = new global::System.Data.DataColumn("ID3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID3);
                this.columnEmployeeName = new global::System.Data.DataColumn("EmployeeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeName);
                this.columnPosition = new global::System.Data.DataColumn("Position", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosition);
                this.columnBranch = new global::System.Data.DataColumn("Branch", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranch);
                this.columnBasicSalary = new global::System.Data.DataColumn("BasicSalary", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBasicSalary);
                this.columnDateHired = new global::System.Data.DataColumn("DateHired", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateHired);
                this.columnEmployeeStatus = new global::System.Data.DataColumn("EmployeeStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeStatus);
                this.columnID4 = new global::System.Data.DataColumn("ID4", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID4);
                this.columnlogin_id = new global::System.Data.DataColumn("login_id", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlogin_id);
                this.columnlogin_password = new global::System.Data.DataColumn("login_password", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlogin_password);
                this.columnaccess_level = new global::System.Data.DataColumn("access_level", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaccess_level);
                this.columnfull_name = new global::System.Data.DataColumn("full_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfull_name);
                this.columnuser_status = new global::System.Data.DataColumn("user_status", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser_status);
                this.columnEmployeeID1 = new global::System.Data.DataColumn("EmployeeID1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeID1);
                this.columnID5 = new global::System.Data.DataColumn("ID5", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID5);
                this.columnPayrollDetailsID = new global::System.Data.DataColumn("PayrollDetailsID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayrollDetailsID);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnID6 = new global::System.Data.DataColumn("ID6", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID6);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnEP_Status = new global::System.Data.DataColumn("EP_Status", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEP_Status);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID,
                                this.columnID1,
                                this.columnID2,
                                this.columnID3,
                                this.columnID4}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnEmployeeID.AllowDBNull = false;
                this.columnAdditionalID.AllowDBNull = false;
                this.columnDeductionID.AllowDBNull = false;
                this.columnDateFrom.AllowDBNull = false;
                this.columnDateTo.AllowDBNull = false;
                this.columnTotalAdditional.AllowDBNull = false;
                this.columnTotalDeduction.AllowDBNull = false;
                this.columnTotalTakeHomePay.AllowDBNull = false;
                this.columnID1.AutoIncrement = true;
                this.columnID1.AutoIncrementSeed = -1;
                this.columnID1.AutoIncrementStep = -1;
                this.columnID1.AllowDBNull = false;
                this.columnID1.ReadOnly = true;
                this.columnOT.AllowDBNull = false;
                this.columnAllowance.AllowDBNull = false;
                this.columnIncentives.AllowDBNull = false;
                this.columnBonus.AllowDBNull = false;
                this.columnOther1.MaxLength = 50;
                this.columnOther1V.AllowDBNull = false;
                this.columnOther2.MaxLength = 50;
                this.columnOther2V.AllowDBNull = false;
                this.columnOther3.MaxLength = 50;
                this.columnOther3V.AllowDBNull = false;
                this.columnID2.AutoIncrement = true;
                this.columnID2.AutoIncrementSeed = -1;
                this.columnID2.AutoIncrementStep = -1;
                this.columnID2.AllowDBNull = false;
                this.columnID2.ReadOnly = true;
                this.columnSSS.AllowDBNull = false;
                this.columnPagIbig.AllowDBNull = false;
                this.columnPhilHealth.AllowDBNull = false;
                this.columnTax.AllowDBNull = false;
                this.columnSSSLoan.AllowDBNull = false;
                this.columnPagIbigLoan.AllowDBNull = false;
                this.columnProviLoan.AllowDBNull = false;
                this.columnAbsents.AllowDBNull = false;
                this.columnLates.AllowDBNull = false;
                this.columnSMCard.AllowDBNull = false;
                this.columnArHealthCard.AllowDBNull = false;
                this.columnOther.AllowDBNull = false;
                this.columnProvidentFund.AllowDBNull = false;
                this.columnID3.AutoIncrement = true;
                this.columnID3.AutoIncrementSeed = -1;
                this.columnID3.AutoIncrementStep = -1;
                this.columnID3.AllowDBNull = false;
                this.columnID3.ReadOnly = true;
                this.columnEmployeeName.AllowDBNull = false;
                this.columnEmployeeName.MaxLength = 2147483647;
                this.columnPosition.AllowDBNull = false;
                this.columnBranch.AllowDBNull = false;
                this.columnBasicSalary.AllowDBNull = false;
                this.columnDateHired.AllowDBNull = false;
                this.columnEmployeeStatus.AllowDBNull = false;
                this.columnID4.AutoIncrement = true;
                this.columnID4.AutoIncrementSeed = -1;
                this.columnID4.AutoIncrementStep = -1;
                this.columnID4.AllowDBNull = false;
                this.columnID4.ReadOnly = true;
                this.columnlogin_id.AllowDBNull = false;
                this.columnlogin_password.AllowDBNull = false;
                this.columnlogin_password.MaxLength = 2147483647;
                this.columnaccess_level.AllowDBNull = false;
                this.columnfull_name.AllowDBNull = false;
                this.columnfull_name.MaxLength = 100;
                this.columnID5.AutoIncrement = true;
                this.columnID5.AutoIncrementSeed = -1;
                this.columnID5.AutoIncrementStep = -1;
                this.columnID5.AllowDBNull = false;
                this.columnID5.ReadOnly = true;
                this.columnPayrollDetailsID.AllowDBNull = false;
                this.columnRemarks.MaxLength = 2147483647;
                this.columnID6.AutoIncrement = true;
                this.columnID6.AutoIncrementSeed = -1;
                this.columnID6.AutoIncrementStep = -1;
                this.columnID6.AllowDBNull = false;
                this.columnID6.ReadOnly = true;
                this.columnName.AllowDBNull = false;
                this.columnName.MaxLength = 100;
                this.columnEP_Status.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spReportGeneratedPayrollPerUserRow NewspReportGeneratedPayrollPerUserRow() {
                return ((spReportGeneratedPayrollPerUserRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new spReportGeneratedPayrollPerUserRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(spReportGeneratedPayrollPerUserRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.spReportGeneratedPayrollPerUserRowChanged != null)) {
                    this.spReportGeneratedPayrollPerUserRowChanged(this, new spReportGeneratedPayrollPerUserRowChangeEvent(((spReportGeneratedPayrollPerUserRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.spReportGeneratedPayrollPerUserRowChanging != null)) {
                    this.spReportGeneratedPayrollPerUserRowChanging(this, new spReportGeneratedPayrollPerUserRowChangeEvent(((spReportGeneratedPayrollPerUserRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.spReportGeneratedPayrollPerUserRowDeleted != null)) {
                    this.spReportGeneratedPayrollPerUserRowDeleted(this, new spReportGeneratedPayrollPerUserRowChangeEvent(((spReportGeneratedPayrollPerUserRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.spReportGeneratedPayrollPerUserRowDeleting != null)) {
                    this.spReportGeneratedPayrollPerUserRowDeleting(this, new spReportGeneratedPayrollPerUserRowChangeEvent(((spReportGeneratedPayrollPerUserRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovespReportGeneratedPayrollPerUserRow(spReportGeneratedPayrollPerUserRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dataSetPayrollDetails ds = new dataSetPayrollDetails();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "spReportGeneratedPayrollPerUserDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class spReportGeneratedPayrollPerUserRow : global::System.Data.DataRow {
            
            private spReportGeneratedPayrollPerUserDataTable tablespReportGeneratedPayrollPerUser;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal spReportGeneratedPayrollPerUserRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablespReportGeneratedPayrollPerUser = ((spReportGeneratedPayrollPerUserDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tablespReportGeneratedPayrollPerUser.IDColumn]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EmployeeID {
                get {
                    return ((int)(this[this.tablespReportGeneratedPayrollPerUser.EmployeeIDColumn]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.EmployeeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AdditionalID {
                get {
                    return ((int)(this[this.tablespReportGeneratedPayrollPerUser.AdditionalIDColumn]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.AdditionalIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DeductionID {
                get {
                    return ((int)(this[this.tablespReportGeneratedPayrollPerUser.DeductionIDColumn]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.DeductionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateFrom {
                get {
                    return ((global::System.DateTime)(this[this.tablespReportGeneratedPayrollPerUser.DateFromColumn]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.DateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateTo {
                get {
                    return ((global::System.DateTime)(this[this.tablespReportGeneratedPayrollPerUser.DateToColumn]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.DateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TotalAdditional {
                get {
                    return ((double)(this[this.tablespReportGeneratedPayrollPerUser.TotalAdditionalColumn]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.TotalAdditionalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TotalDeduction {
                get {
                    return ((double)(this[this.tablespReportGeneratedPayrollPerUser.TotalDeductionColumn]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.TotalDeductionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TotalTakeHomePay {
                get {
                    return ((double)(this[this.tablespReportGeneratedPayrollPerUser.TotalTakeHomePayColumn]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.TotalTakeHomePayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID1 {
                get {
                    return ((int)(this[this.tablespReportGeneratedPayrollPerUser.ID1Column]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.ID1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OT {
                get {
                    return ((double)(this[this.tablespReportGeneratedPayrollPerUser.OTColumn]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.OTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Allowance {
                get {
                    return ((double)(this[this.tablespReportGeneratedPayrollPerUser.AllowanceColumn]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.AllowanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Incentives {
                get {
                    return ((double)(this[this.tablespReportGeneratedPayrollPerUser.IncentivesColumn]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.IncentivesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Bonus {
                get {
                    return ((double)(this[this.tablespReportGeneratedPayrollPerUser.BonusColumn]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.BonusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Other1 {
                get {
                    try {
                        return ((string)(this[this.tablespReportGeneratedPayrollPerUser.Other1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Other1\' in table \'spReportGeneratedPayrollPerUser\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.Other1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Other1V {
                get {
                    return ((double)(this[this.tablespReportGeneratedPayrollPerUser.Other1VColumn]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.Other1VColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Other2 {
                get {
                    try {
                        return ((string)(this[this.tablespReportGeneratedPayrollPerUser.Other2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Other2\' in table \'spReportGeneratedPayrollPerUser\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.Other2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Other2V {
                get {
                    return ((double)(this[this.tablespReportGeneratedPayrollPerUser.Other2VColumn]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.Other2VColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Other3 {
                get {
                    try {
                        return ((string)(this[this.tablespReportGeneratedPayrollPerUser.Other3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Other3\' in table \'spReportGeneratedPayrollPerUser\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.Other3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Other3V {
                get {
                    return ((double)(this[this.tablespReportGeneratedPayrollPerUser.Other3VColumn]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.Other3VColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID2 {
                get {
                    return ((int)(this[this.tablespReportGeneratedPayrollPerUser.ID2Column]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.ID2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SSS {
                get {
                    return ((double)(this[this.tablespReportGeneratedPayrollPerUser.SSSColumn]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.SSSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PagIbig {
                get {
                    return ((double)(this[this.tablespReportGeneratedPayrollPerUser.PagIbigColumn]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.PagIbigColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PhilHealth {
                get {
                    return ((double)(this[this.tablespReportGeneratedPayrollPerUser.PhilHealthColumn]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.PhilHealthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Tax {
                get {
                    return ((double)(this[this.tablespReportGeneratedPayrollPerUser.TaxColumn]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.TaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SSSLoan {
                get {
                    return ((double)(this[this.tablespReportGeneratedPayrollPerUser.SSSLoanColumn]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.SSSLoanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PagIbigLoan {
                get {
                    return ((double)(this[this.tablespReportGeneratedPayrollPerUser.PagIbigLoanColumn]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.PagIbigLoanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ProviLoan {
                get {
                    return ((double)(this[this.tablespReportGeneratedPayrollPerUser.ProviLoanColumn]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.ProviLoanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Absents {
                get {
                    return ((double)(this[this.tablespReportGeneratedPayrollPerUser.AbsentsColumn]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.AbsentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Lates {
                get {
                    return ((double)(this[this.tablespReportGeneratedPayrollPerUser.LatesColumn]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.LatesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SMCard {
                get {
                    return ((double)(this[this.tablespReportGeneratedPayrollPerUser.SMCardColumn]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.SMCardColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ArHealthCard {
                get {
                    return ((double)(this[this.tablespReportGeneratedPayrollPerUser.ArHealthCardColumn]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.ArHealthCardColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Other {
                get {
                    return ((double)(this[this.tablespReportGeneratedPayrollPerUser.OtherColumn]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.OtherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ProvidentFund {
                get {
                    return ((double)(this[this.tablespReportGeneratedPayrollPerUser.ProvidentFundColumn]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.ProvidentFundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID3 {
                get {
                    return ((int)(this[this.tablespReportGeneratedPayrollPerUser.ID3Column]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.ID3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EmployeeName {
                get {
                    return ((string)(this[this.tablespReportGeneratedPayrollPerUser.EmployeeNameColumn]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.EmployeeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Position {
                get {
                    return ((int)(this[this.tablespReportGeneratedPayrollPerUser.PositionColumn]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.PositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Branch {
                get {
                    return ((int)(this[this.tablespReportGeneratedPayrollPerUser.BranchColumn]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.BranchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double BasicSalary {
                get {
                    return ((double)(this[this.tablespReportGeneratedPayrollPerUser.BasicSalaryColumn]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.BasicSalaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateHired {
                get {
                    return ((global::System.DateTime)(this[this.tablespReportGeneratedPayrollPerUser.DateHiredColumn]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.DateHiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EmployeeStatus {
                get {
                    return ((int)(this[this.tablespReportGeneratedPayrollPerUser.EmployeeStatusColumn]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.EmployeeStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID4 {
                get {
                    return ((int)(this[this.tablespReportGeneratedPayrollPerUser.ID4Column]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.ID4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal login_id {
                get {
                    return ((decimal)(this[this.tablespReportGeneratedPayrollPerUser.login_idColumn]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.login_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string login_password {
                get {
                    return ((string)(this[this.tablespReportGeneratedPayrollPerUser.login_passwordColumn]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.login_passwordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int access_level {
                get {
                    return ((int)(this[this.tablespReportGeneratedPayrollPerUser.access_levelColumn]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.access_levelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string full_name {
                get {
                    return ((string)(this[this.tablespReportGeneratedPayrollPerUser.full_nameColumn]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.full_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int user_status {
                get {
                    try {
                        return ((int)(this[this.tablespReportGeneratedPayrollPerUser.user_statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user_status\' in table \'spReportGeneratedPayrollPerUser\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.user_statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EmployeeID1 {
                get {
                    try {
                        return ((int)(this[this.tablespReportGeneratedPayrollPerUser.EmployeeID1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmployeeID1\' in table \'spReportGeneratedPayrollPerUser\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.EmployeeID1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID5 {
                get {
                    return ((int)(this[this.tablespReportGeneratedPayrollPerUser.ID5Column]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.ID5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PayrollDetailsID {
                get {
                    return ((int)(this[this.tablespReportGeneratedPayrollPerUser.PayrollDetailsIDColumn]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.PayrollDetailsIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tablespReportGeneratedPayrollPerUser.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'spReportGeneratedPayrollPerUser\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID6 {
                get {
                    return ((int)(this[this.tablespReportGeneratedPayrollPerUser.ID6Column]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.ID6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    return ((string)(this[this.tablespReportGeneratedPayrollPerUser.NameColumn]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EP_Status {
                get {
                    return ((int)(this[this.tablespReportGeneratedPayrollPerUser.EP_StatusColumn]));
                }
                set {
                    this[this.tablespReportGeneratedPayrollPerUser.EP_StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOther1Null() {
                return this.IsNull(this.tablespReportGeneratedPayrollPerUser.Other1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOther1Null() {
                this[this.tablespReportGeneratedPayrollPerUser.Other1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOther2Null() {
                return this.IsNull(this.tablespReportGeneratedPayrollPerUser.Other2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOther2Null() {
                this[this.tablespReportGeneratedPayrollPerUser.Other2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOther3Null() {
                return this.IsNull(this.tablespReportGeneratedPayrollPerUser.Other3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOther3Null() {
                this[this.tablespReportGeneratedPayrollPerUser.Other3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isuser_statusNull() {
                return this.IsNull(this.tablespReportGeneratedPayrollPerUser.user_statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setuser_statusNull() {
                this[this.tablespReportGeneratedPayrollPerUser.user_statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEmployeeID1Null() {
                return this.IsNull(this.tablespReportGeneratedPayrollPerUser.EmployeeID1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEmployeeID1Null() {
                this[this.tablespReportGeneratedPayrollPerUser.EmployeeID1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRemarksNull() {
                return this.IsNull(this.tablespReportGeneratedPayrollPerUser.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRemarksNull() {
                this[this.tablespReportGeneratedPayrollPerUser.RemarksColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class spReportGeneratedPayrollPerUserRowChangeEvent : global::System.EventArgs {
            
            private spReportGeneratedPayrollPerUserRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spReportGeneratedPayrollPerUserRowChangeEvent(spReportGeneratedPayrollPerUserRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spReportGeneratedPayrollPerUserRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace GatebankPayroll.dataSetPayrollDetailsTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class spReportGeneratedPayrollPerUserTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public spReportGeneratedPayrollPerUserTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "spReportGeneratedPayrollPerUser";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("EmployeeID", "EmployeeID");
            tableMapping.ColumnMappings.Add("AdditionalID", "AdditionalID");
            tableMapping.ColumnMappings.Add("DeductionID", "DeductionID");
            tableMapping.ColumnMappings.Add("DateFrom", "DateFrom");
            tableMapping.ColumnMappings.Add("DateTo", "DateTo");
            tableMapping.ColumnMappings.Add("TotalAdditional", "TotalAdditional");
            tableMapping.ColumnMappings.Add("TotalDeduction", "TotalDeduction");
            tableMapping.ColumnMappings.Add("TotalTakeHomePay", "TotalTakeHomePay");
            tableMapping.ColumnMappings.Add("ID1", "ID1");
            tableMapping.ColumnMappings.Add("OT", "OT");
            tableMapping.ColumnMappings.Add("Allowance", "Allowance");
            tableMapping.ColumnMappings.Add("Incentives", "Incentives");
            tableMapping.ColumnMappings.Add("Bonus", "Bonus");
            tableMapping.ColumnMappings.Add("Other1", "Other1");
            tableMapping.ColumnMappings.Add("Other1V", "Other1V");
            tableMapping.ColumnMappings.Add("Other2", "Other2");
            tableMapping.ColumnMappings.Add("Other2V", "Other2V");
            tableMapping.ColumnMappings.Add("Other3", "Other3");
            tableMapping.ColumnMappings.Add("Other3V", "Other3V");
            tableMapping.ColumnMappings.Add("ID2", "ID2");
            tableMapping.ColumnMappings.Add("SSS", "SSS");
            tableMapping.ColumnMappings.Add("PagIbig", "PagIbig");
            tableMapping.ColumnMappings.Add("PhilHealth", "PhilHealth");
            tableMapping.ColumnMappings.Add("Tax", "Tax");
            tableMapping.ColumnMappings.Add("SSSLoan", "SSSLoan");
            tableMapping.ColumnMappings.Add("PagIbigLoan", "PagIbigLoan");
            tableMapping.ColumnMappings.Add("ProviLoan", "ProviLoan");
            tableMapping.ColumnMappings.Add("Absents", "Absents");
            tableMapping.ColumnMappings.Add("Lates", "Lates");
            tableMapping.ColumnMappings.Add("SMCard", "SMCard");
            tableMapping.ColumnMappings.Add("ArHealthCard", "ArHealthCard");
            tableMapping.ColumnMappings.Add("Other", "Other");
            tableMapping.ColumnMappings.Add("ProvidentFund", "ProvidentFund");
            tableMapping.ColumnMappings.Add("ID3", "ID3");
            tableMapping.ColumnMappings.Add("EmployeeName", "EmployeeName");
            tableMapping.ColumnMappings.Add("Position", "Position");
            tableMapping.ColumnMappings.Add("Branch", "Branch");
            tableMapping.ColumnMappings.Add("BasicSalary", "BasicSalary");
            tableMapping.ColumnMappings.Add("DateHired", "DateHired");
            tableMapping.ColumnMappings.Add("EmployeeStatus", "EmployeeStatus");
            tableMapping.ColumnMappings.Add("ID4", "ID4");
            tableMapping.ColumnMappings.Add("login_id", "login_id");
            tableMapping.ColumnMappings.Add("login_password", "login_password");
            tableMapping.ColumnMappings.Add("access_level", "access_level");
            tableMapping.ColumnMappings.Add("full_name", "full_name");
            tableMapping.ColumnMappings.Add("user_status", "user_status");
            tableMapping.ColumnMappings.Add("EmployeeID1", "EmployeeID1");
            tableMapping.ColumnMappings.Add("ID5", "ID5");
            tableMapping.ColumnMappings.Add("PayrollDetailsID", "PayrollDetailsID");
            tableMapping.ColumnMappings.Add("Remarks", "Remarks");
            tableMapping.ColumnMappings.Add("ID6", "ID6");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("EP_Status", "EP_Status");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = Cryptography.Decrypt(File.ReadAllText(Directory.GetCurrentDirectory() + "\\Resources\\Connection.txt"));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.spReportGeneratedPayrollPerUser";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@payrollDetailsId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dataSetPayrollDetails.spReportGeneratedPayrollPerUserDataTable dataTable, global::System.Nullable<int> payrollDetailsId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((payrollDetailsId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(payrollDetailsId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dataSetPayrollDetails.spReportGeneratedPayrollPerUserDataTable GetData(global::System.Nullable<int> payrollDetailsId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((payrollDetailsId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(payrollDetailsId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            dataSetPayrollDetails.spReportGeneratedPayrollPerUserDataTable dataTable = new dataSetPayrollDetails.spReportGeneratedPayrollPerUserDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(dataSetPayrollDetails dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(dataSetPayrollDetails dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(dataSetPayrollDetails dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(dataSetPayrollDetails dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591